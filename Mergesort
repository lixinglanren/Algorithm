#思想：分治处理，先找到最中间的数

#include<bits/stdc++.h>
using namespace std;
const int N = 10000;
int A[N], q[N];

void merge_sort(int l, int r)
{
	if(l >= r) return; #如果只有一个或者没有数字直接返回
	int mid = l + r >> 1; #从中间分开
	merge_sort(l, mid); #递归排序左边
	merge_sort(mid+1, r); #递归排序右边
	int k = 0;
	int i = l, j = mid + 1; #合并数组
	while(i <= mid && j <= r)
	{
		if(A[i] < A[j]) q[k++] = A[i++]; #谁小就放在新的数组里
		else q[k++] = A[j++];
	}
	while(i <= mid) #若有数组没放完则接着放
		q[k++] = A[i++];
	while(j <= r)
		q[k++] = A[j++];
	for(i = l, j = 0; i <= r;) #全部返回到原来的数组里
		A[i++] = q[j++]; 
}
int main()
{
	int n;
	cin >> n;
	for(int i = 0; i < n; i++)
		cin >> A[i];
	merge_sort(0, n-1);
	for(int i = 0; i < n; i++)
		cout << A[i] << ' ';
	return 0;
} 
